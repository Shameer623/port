I'll provide the complete code for your Vite React portfolio structure. Let's build this step by step:

### 1. Initialize the Vite Project
```bash
npm create vite@latest shameer-portfolio --template react
cd shameer-portfolio
npm install react-icons react-scroll framer-motion
```

### 2. Complete File Structure with Code

shameer-portfolio/
├── public/
│   ├── project1.jpg          # Sample project images
│   ├── project2.jpg
│   └── vite.svg
│
├── src/
│   ├── assets/
│   │   └── shameer-resume.pdf  # Your resume PDF
│   │
│   ├── components/
│   │   ├── sections/
│   │   │   ├── About.jsx
│   │   │   ├── Contact.jsx
│   │   │   ├── Experience.jsx
│   │   │   ├── Header.jsx
│   │   │   ├── Projects.jsx
│   │   │   ├── Resume.jsx
│   │   │   ├── Skills.jsx
│   │   │   └── index.js       # Optional barrel file
│   │   │
│   │   └── ui/
│   │       ├── LoadingSpinner.jsx
│   │       ├── Navbar.jsx
│   │       ├── ProjectCard.jsx
│   │       ├── SkillBar.jsx
│   │       └── index.js       # Optional barrel file
│   │
│   ├── context/
│   │   └── ThemeContext.jsx   # Dark mode context
│   │
│   ├── styles/
│   │   └── globals.css        # All CSS styles
│   │
│   ├── App.jsx                # Main app component
│   ├── main.jsx               # Entry point
│   └── vite-env.d.ts          # TypeScript declarations (if using TS)
│
├── .gitignore
├── index.html
├── package.json
├── vite.config.js             # Vite configuration
└── README.md                  # Project documentation

#### `src/main.jsx`
```jsx
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'
import './styles/globals.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
)
```

#### `src/App.jsx`
```jsx
import { lazy, Suspense } from 'react'
import Navbar from './components/ui/Navbar'
import LoadingSpinner from './components/ui/LoadingSpinner'

// Lazy load sections
const Header = lazy(() => import('./components/sections/Header'))
const About = lazy(() => import('./components/sections/About'))
const Skills = lazy(() => import('./components/sections/Skills'))
const Experience = lazy(() => import('./components/sections/Experience'))
const Projects = lazy(() => import('./components/sections/Projects'))
const Contact = lazy(() => import('./components/sections/Contact'))

function App() {
  return (
    <>
      <Navbar />
      <Suspense fallback={<LoadingSpinner />}>
        <Header />
        <About />
        <Skills />
        <Experience />
        <Projects />
        <Contact />
      </Suspense>
    </>
  )
}

export default App
```

#### `src/components/ui/Navbar.jsx`
```jsx
import { FaGithub, FaLinkedin } from 'react-icons/fa'
import { motion } from 'framer-motion'

const Navbar = () => {
  const navItems = [
    { name: 'About', id: 'about' },
    { name: 'Skills', id: 'skills' },
    { name: 'Experience', id: 'experience' },
    { name: 'Projects', id: 'projects' },
    { name: 'Contact', id: 'contact' }
  ]

  return (
    <motion.nav 
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      className="navbar"
    >
      <div className="container">
        <a href="#home" className="logo">Shameer</a>
        <div className="nav-links">
          {navItems.map((item) => (
            <a key={item.id} href={`#${item.id}`}>{item.name}</a>
          ))}
        </div>
        <div className="social-icons">
          <a href="https://github.com/Shameer623" target="_blank" rel="noopener noreferrer">
            <FaGithub />
          </a>
          <a href="[YOUR_LINKEDIN]" target="_blank" rel="noopener noreferrer">
            <FaLinkedin />
          </a>
        </div>
      </div>
    </motion.nav>
  )
}

export default Navbar
```

#### `src/components/sections/Header.jsx`
```jsx
import { motion } from 'framer-motion'

const Header = () => {
  return (
    <motion.header 
      id="home"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="header"
    >
      <div className="container">
        <motion.div 
          initial={{ y: 50, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ delay: 0.2 }}
          className="header-content"
        >
          <h1>N Mohammed Shameer</h1>
          <h2>Java Full Stack Developer</h2>
          <p>Building scalable backend systems with Spring Boot and intuitive frontends with React.js</p>
          <div className="cta-buttons">
            <a href="#projects" className="btn btn-primary">View My Work</a>
            <a href="#contact" className="btn btn-secondary">Contact Me</a>
          </div>
        </motion.div>
      </div>
    </motion.header>
  )
}

export default Header
```

#### `src/components/sections/Skills.jsx`
```jsx
import { motion } from 'framer-motion'
import SkillBar from '../ui/SkillBar'

const skills = [
  { name: 'Java', level: 90 },
  { name: 'Spring Boot', level: 85 },
  { name: 'Hibernate', level: 80 },
  { name: 'MySQL', level: 75 },
  { name: 'React.js', level: 80 },
  { name: 'JavaScript', level: 85 },
  { name: 'HTML/CSS', level: 75 },
  { name: 'REST APIs', level: 85 },
  { name: 'Git', level: 80 },
  { name: 'Docker', level: 70 },
]

const Skills = () => {
  return (
    <motion.section 
      id="skills"
      initial={{ opacity: 0 }}
      whileInView={{ opacity: 1 }}
      viewport={{ once: true }}
      className="section skills"
    >
      <div className="container">
        <h2 className="section-title">Technical Skills</h2>
        <div className="skills-grid">
          {skills.map((skill, index) => (
            <motion.div
              key={skill.name}
              initial={{ y: 50, opacity: 0 }}
              whileInView={{ y: 0, opacity: 1 }}
              viewport={{ once: true }}
              transition={{ delay: index * 0.1 }}
            >
              <SkillBar skill={skill} />
            </motion.div>
          ))}
        </div>
      </div>
    </motion.section>
  )
}

export default Skills
```

#### `src/components/ui/SkillBar.jsx`
```jsx
const SkillBar = ({ skill }) => {
  return (
    <div className="skill-item">
      <div className="skill-info">
        <span>{skill.name}</span>
        <span>{skill.level}%</span>
      </div>
      <div className="skill-bar">
        <div 
          className="skill-progress" 
          style={{ width: `${skill.level}%` }}
          aria-valuenow={skill.level}
          aria-valuemin="0"
          aria-valuemax="100"
        ></div>
      </div>
    </div>
  )
}

export default SkillBar
```

#### `src/styles/globals.css`
```css
:root {
  --primary: #0078d7;
  --primary-dark: #005fa3;
  --secondary: #6c757d;
  --dark: #343a40;
  --light: #f8f9fa;
  --white: #ffffff;
  --black: #212529;
  --gray: #e9ecef;
  --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
  color: var(--black);
  background-color: var(--white);
  overflow-x: hidden;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1.5rem;
}

.section {
  padding: 5rem 0;
}

.section-title {
  text-align: center;
  margin-bottom: 3rem;
  font-size: 2.5rem;
  color: var(--dark);
}

.btn {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-weight: 600;
  text-align: center;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
}

.btn-primary {
  background-color: var(--primary);
  color: var(--white);
}

.btn-primary:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
}

.btn-secondary {
  background-color: var(--secondary);
  color: var(--white);
}

.btn-secondary:hover {
  background-color: #5a6268;
  transform: translateY(-2px);
}

/* Navbar Styles */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--white);
  box-shadow: var(--shadow);
  z-index: 1000;
  padding: 1rem 0;
}

.navbar .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary);
  text-decoration: none;
}

.nav-links {
  display: flex;
  gap: 1.5rem;
}

.nav-links a {
  color: var(--dark);
  font-weight: 500;
  text-decoration: none;
  transition: color 0.3s ease;
}

.nav-links a:hover {
  color: var(--primary);
}

.social-icons {
  display: flex;
  gap: 1rem;
}

.social-icons a {
  color: var(--dark);
  font-size: 1.25rem;
  transition: color 0.3s ease;
}

.social-icons a:hover {
  color: var(--primary);
}

/* Header Styles */
.header {
  min-height: 100vh;
  display: flex;
  align-items: center;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding-top: 5rem;
}

.header-content {
  text-align: center;
  max-width: 800px;
  margin: 0 auto;
}

.header h1 {
  font-size: 3.5rem;
  margin-bottom: 1rem;
  color: var(--dark);
}

.header h2 {
  font-size: 2rem;
  color: var(--primary);
  margin-bottom: 1.5rem;
  font-weight: 400;
}

.header p {
  font-size: 1.25rem;
  margin-bottom: 2rem;
  color: var(--secondary);
}

.cta-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
}

/* Skills Styles */
.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.skill-item {
  margin-bottom: 1.5rem;
}

.skill-info {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.skill-bar {
  height: 0.5rem;
  background-color: var(--gray);
  border-radius: 0.25rem;
  overflow: hidden;
}

.skill-progress {
  height: 100%;
  background-color: var(--primary);
  border-radius: 0.25rem;
}

/* Responsive Design */
@media (max-width: 768px) {
  .navbar .container {
    flex-direction: column;
    gap: 1rem;
  }
  
  .nav-links {
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .header h1 {
    font-size: 2.5rem;
  }
  
  .header h2 {
    font-size: 1.5rem;
  }
  
  .cta-buttons {
    flex-direction: column;
    gap: 1rem;
  }
  
  .section {
    padding: 3rem 0;
  }
}
```

#### `vite.config.js`
```javascript
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  build: {
    rollupOptions: {
      output: {
        manualChunks: {
          react: ['react', 'react-dom', 'react-router-dom'],
          animations: ['framer-motion'],
          icons: ['react-icons']
        }
      }
    }
  },
  server: {
    port: 3000,
    open: true
  }
})
```

### 3. How to Run
```bash
npm run dev
```

This complete implementation includes:
- Modern React with Vite
- Responsive design
- Smooth animations with Framer Motion
- Optimized build configuration
- Clean component structure
- CSS modules for scoped styling

Would you like me to add any specific features like:
1. Dark mode toggle
2. PDF resume viewer
3. Contact form functionality
4. Project filtering system?
